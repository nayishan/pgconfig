#!/bin/bash
basePath=${HOME}
pgCode="${basePath}/gitCode/postgresql-12.2"
kbCode="${basePath}/gitCode/postgresql_master"

OS="`uname`"
case $OS in
  'Linux')
    bashrc="${basePath}/.bashrc"
    ;;
  'Darwin')
    bashrc="${basePath}/.zshrc"
    ;;
  *) ;;
esac


pgHome="${basePath}/pgrelease"
kbHome="${basePath}/kbrelease"

pgUser=$(whoami)
kbUser=$(whoami)

pgLog="${basePath}/log/pg"
kbLog="${basePath}/log/kb"


userBin="${basePath}/pgconfig"


pgKeyWord=("KBHOME" "PGHOME" "KBDATA" "PGDATA" "KBMANPATH" "PGMANPATH" "LANG" "DATE" "KBPORT" "PGPORT" "KBHOST" "PGHOST" "KBUSER" "PGUSER" "KBCODE" "PGCODE" "KBLOG" "PGLOG" "GOROOT" "GOPATH" "GO111MODULE" "setproxy" "unsetproxy" "ls" "mycloud")
#osKeyWord=("LD_LIBRARY_PATH" "PATH")

#delete
case $OS in
    'Linux')
        for keyword1 in ${pgKeyWord[@]}
        do
            sed -i "/^${keyWord1}=/d" ${bashrc}
            sed -i "/export ${keyWord1}/d" ${bashrc}
            sed -i "/alias ${keyWord1}/d" ${bashrc}
        done
        ;;
     'Darwin')
        for keyword1 in ${pgKeyWord[@]}
        do
            sed -i "" -e "/^${keyWord1}=/d" ${bashrc}
            sed -i "" -e "/export ${keyWord1}/d" ${bashrc}
            sed -i "" -e "/alias ${keyWord1}/d" ${bashrc}
        done
        ;;
    *)
        ;;
esac

#add pgkey
echo "export KBHOME=${kbHome}" >>${bashrc}
echo "export PGHOME=${pgHome}" >>${bashrc}

echo "export KBDATA=\${KBHOME}/data" >>${bashrc}
echo "export PGDATA=\${PGHOME}/data" >>${bashrc}

echo "export KBMANPATH=\${KBHOME}/share/man" >>${bashrc}
echo "export PGMANPATH=\${PGHOME}/share/man" >>${bashrc}

echo "export LANG=en_US.utf8" >>${bashrc}
echo "export DATE=\`date +\"%Y-%m-%d%H:%M:%S\"\`" >>${bashrc}

echo "export KBPORT=34533" >>${bashrc}
echo "export PGPORT=34532" >>${bashrc}

echo "export KBHOST=localhost" >>${bashrc}
echo "export PGHOST=localhost" >>${bashrc}

echo "export KBUSER=${kbUser}" >>${bashrc}
echo "export PGUSER=${pgUser}" >>${bashrc}

echo "export KBCODE=${kbCode}" >> ${bashrc}
echo "export PGCODE=${pgCode}" >>${bashrc}

echo "export KBLOG=${kbLog}" >>${bashrc}
echo "export PGLOG=${pgLog}" >>${bashrc}

#add oskey
#for keyWord2 in ${osKeyWord[@]}
#do
#    if ! $(grep "^${keyWord2}=" ${bashrc}|grep "\$PGHOME") && ! $(grep " ${keyWord2}=" ${bashrc}|grep "\$PGHOME"); then
#        if [ ${keyWord2} ==  ${osKeyWord[0]} ];then
#            echo "export ${osKeyWord[0]}=\$${osKeyWord[0]}:\${PGHOME}/lib" >>${bashrc}
#        elif [ ${keyWord2} == ${osKeyWord[1]} ];then
#            echo "export ${osKeyWord[1]}=\$${osKeyWord[1]}:\${PGHOME}/bin:${userBin}" >>${bashrc}
#        fi  
#    fi  
#done
echo "export PATH=\${PATH}:${userBin}" >>${bashrc}

echo "export GOROOT=/usr/local/go" >>${bashrc}
echo "export GOPATH=\${HOME}/gitCode/go" >>${bashrc}
echo "export PATH=\${PATH}:\${GOROOT}/bin:\${GOPATH}/bin" >>${bashrc}
echo "export GO111MODULE=on" >>${bashrc}

# 设置使用代理
echo "alias setproxy=\"export https_proxy=http://localhost:8118; export http_proxy=http://localhost:8118; export all_proxy=socks5://localhost:8119; echo 'Set proxy successfully'\"" >>${bashrc}

#alias setproxy="export https_proxy=http://localhost:8118; export http_proxy=http://localhost:8118; export all_proxy=socks5://localhost:8119; echo 'Set proxy successfully'"
# 设置取消使用代理
echo "alias unsetproxy=\"unset http_proxy; unset https_proxy; unset all_proxy; echo 'Unset proxy successfully'\"" >>${bashrc}
#alias unsetproxy="unset http_proxy; unset https_proxy; unset all_proxy; echo 'Unset proxy successfully'"

echo "alias ls='ls --color'" >>${bashrc}
echo "alias mycloud=\"ssh 101.43.191.88\"" >>${bashrc}


#eval "$(lua ${HOME}/config/z.lua/z.lua --init zsh)"
